CPP = gcc
CPP_OPTIONS = -nostdlib -fno-builtin -nostartfiles -nodefaultlibs -fno-exceptions -fno-rtti -fno-stack-protector -fleading-underscore -m32

all: kernel.bin

clean:
	rm -f *.o

# ==== KERNEL ENTRY POINT ====

start.o: start.asm
	nasm -f aout -o start.o start.asm
#	as --32 -march=i386 -o start.o start.asm

# ==== UTILITIES ====
utils.o: utils.C utils.H
	$(CPP) $(CPP_OPTIONS) -c -o utils.o utils.C

assert.o: assert.C assert.H
	$(CPP) $(CPP_OPTIONS) -c -o assert.o assert.C

# ==== DEVICES =====

console.o: console.C console.H
	$(CPP) $(CPP_OPTIONS) -c -o console.o console.C

# ==== MEMORY =====

frame_pool.o: frame_pool.C frame_pool.H
	$(CPP) $(CPP_OPTIONS) -c -o frame_pool.o frame_pool.C
	
# ==== KERNEL MAIN FILE =====

kernel.o: kernel.C console.H frame_pool.H
	$(CPP) $(CPP_OPTIONS) -c -o kernel.o kernel.C

kernel.bin: start.o utils.o kernel.o assert.o console.o frame_pool.o 
	ld -melf_i386 -T linker.ld -o kernel.bin start.o utils.o kernel.o assert.o console.o frame_pool.o 
